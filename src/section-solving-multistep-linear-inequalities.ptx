<?xml version="1.0" encoding="UTF-8" ?>
<!-- *********************************************************************-->
<!-- Copyright 2016-2018                                                  -->
<!-- Portland Community College                                           -->
<!--                                                                      -->
<!-- This file is part of Open Resources for Community College Algebra    -->
<!-- (ORCCA).                                                             -->
<!-- *********************************************************************-->
<section xml:id="section-solving-multistep-linear-inequalities" permid="jdy">
  <title>Solving Multistep Linear Inequalities</title>
  <introduction permid="sbL">
    <p permid="xvy">
      We have learned how to solve one-step inequalities in <xref ref="section-solving-one-step-inequalities">Section</xref>.
      In this section, we will learn how to solve multistep inequalities.
    </p>
  </introduction>
  <subsection permid="PkH">
    <title>Solving Multistep Inequalities</title>
    <p permid="pQZ">
      When solving a linear inequality,
      we follow the same steps in <xref ref="list-solve-multistep-linear-equation">List</xref>.
      The only difference in our steps to solving is that when we multiply or divide by a negative number on both sides of an inequality,
      the direction of the inequality symbol must switch.
      We will look at some examples.
    </p>
    <list xml:id="list-solve-multistep-linear-inequality" permid="fNt">
      <title>Steps to Solve Linear Inequalities</title>
      <idx><h>solving</h><h>linear inequalities</h><h>multistep</h></idx>
      <dl permid="wLE">
        <li permid="cSN">
          <title>Simplify</title>
          <p permid="hCG">
            Simplify the expressions on each side of the inequality by distributing and combining like terms.
          </p>
        </li>
        <li permid="IZW">
          <title>Isolate</title>
          <p permid="NJP">
            Use addition or subtraction to isolate the variable terms and constant terms (numbers) so that they are on different sides of the inequality symbol.
          </p>
        </li>
        <li permid="phf">
          <title>Eliminate</title>
          <p permid="tQY">
            Use multiplication or division to eliminate the variable term's coefficient.
            If each side of the inequality is multiplied or divided by a negative number,
            switch the direction of the inequality symbol.
          </p>
        </li>
        <li permid="Voo">
          <title>Check</title>
          <p permid="ZYh">
            When specified,
            verify the infinite solution set by checking multiple solutions.
          </p>
        </li>
        <li permid="Bvx">
          <title>Summarize</title>
          <p permid="Gfq">
            State the solution set or
            (in the case of an application problem)
            summarize the result in a complete sentence using appropriate units.
          </p>
        </li>
      </dl>
    </list>
    <example xml:id="example-inequality-simple" permid="bdA">
      <statement>
        <p permid="Aqe">
          Solve for <m>t</m> in the inequality <m>-3t+5\geq11</m>.
          Write the solution set in both set-builder notation and interval notation.
        </p>
      </statement>
      <solution permid="YiU">
        <p permid="mmz">
          <md permid="VYi">
            <mrow>-3t+5\amp\geq11</mrow>
            <mrow>-3t+5\subtractright{5}\amp\geq11\subtractright{5}</mrow>
            <mrow>-3t\amp\geq6</mrow>
            <mrow>\divideunder{-3t}{-3}\amp\mathbin{\highlight{\le}}\divideunder{6}{-3}</mrow>
            <mrow>t\amp\leq-2</mrow>
          </md>
        </p>
        <p permid="StI">
          Note that when we divided both sides of the inequality by <m>-3</m>,
          we had to switch the direction of the inequality symbol.
        </p>
        <p permid="yAR">
          The solution set in set-builder notation is <m>\{t\mid t\leq-2\}</m>.
        </p>
        <p permid="eIa">
          The solution set in interval notation is <m>(-\infty,-2]</m>.
        </p>
      </solution>
    </example>
    <remark permid="zGk">
      <p permid="YSO">
        Since the inequality solved in <xref ref="example-inequality-simple">Example</xref>
        has infinitely many solutions, it's difficult to check.
        We found that all values of <m>t</m> for which <m>t\leq-2</m> are solutions,
        so one approach is to check if <m>-2</m> is a solution and additionally if one other number less than <m>-2</m> is a solution.
      </p>
      <sidebyside widths="47% 47%" margins="0%" permid="LUC">
        <p permid="EZX">
          Here, we'll check that <m>-2</m> satisfies this inequality:
          <md permid="Cfr">
            <mrow>-3t+5\amp\geq11</mrow>
            <mrow>-3(\substitute{-2})+5\amp\stackrel{?}{\geq}11</mrow>
            <mrow>6+5\amp\stackrel{?}{\geq}11</mrow>
            <mrow>11\amp\stackrel{\checkmark}{\geq}11</mrow>
          </md>
        </p>
        <p permid="lhg">
          Next, we can check another number smaller than <m>-2</m>,
          such as <m>-5</m>:
          <md permid="imA">
            <mrow>-3t+5\amp\geq11</mrow>
            <mrow>-3(\substitute{-5})+5\amp\stackrel{?}{\geq}11</mrow>
            <mrow>15+5\amp\stackrel{?}{\geq}11</mrow>
            <mrow>20\amp\stackrel{\checkmark}{\geq}11</mrow>
          </md>
        </p>
      </sidebyside>
      <p permid="Rop">
        Thus, both <m>-2</m> and <m>-5</m> are solutions.
        It's important to note that this doesn't directly verify that <em>all</em>
        solutions to this inequality check.
        It's valuable though in that it would likely help us catch an error if we had made one.
        Consult your instructor to see if you're expected to check your answer in this manner.
      </p>
    </remark>
    <example permid="HkJ">
      <statement>
        <p permid="gxn">
          Solve for <m>z</m> in the inequality <m>(6z+5)-(2z-3)\lt-12</m>.
          Write the solution set in both set-builder notation and interval notation.
        </p>
      </statement>
      <solution permid="Eqd">
        <p permid="KPj">
          <md permid="OtJ">
            <mrow>(6z+5)-(2z-3)\amp\lt-12</mrow>
            <mrow>6z+5-2z+3\amp\lt-12</mrow>
            <mrow>4z+8\amp\lt-12</mrow>
            <mrow>4z+8\subtractright{8}\amp\lt-12\subtractright{8}</mrow>
            <mrow>4z\amp\lt-20</mrow>
            <mrow>\divideunder{4z}{4}\amp\lt\divideunder{-20}{4}</mrow>
            <mrow>z\amp\lt -5</mrow>
          </md>
        </p>
        <p permid="qWs">
          Note that we divided both sides of the inequality by <m>4</m> and since this is a positive number we <em>did not</em>
          need to switch the direction of the inequality symbol.
        </p>
        <p permid="XdB">
          The solution set in set-builder notation is <m>\{z\mid z\lt-5\}</m>.
        </p>
        <p permid="DkK">
          The solution set in interval notation is <m>(-\infty,-5)</m>.
        </p>
      </solution>
    </example>
    <example permid="nrS">
      <statement>
        <p permid="MEw">
          Solve for <m>x</m> in <m>-2-2(2x+1)\gt4-(3-x)</m>.
          Write the solution set in both set-builder notation and interval notation.
        </p>
      </statement>
      <solution permid="kxm">
        <p permid="jrT">
          <md permid="uAS">
            <mrow>-2-2(2x+1)\amp\gt4-(3-x)</mrow>
            <mrow>-2-4x-2\amp\gt4-3+x</mrow>
            <mrow>-4x-4\amp\gt x+1</mrow>
            <mrow>-4x-4\subtractright{x}\amp\gt x+1\subtractright{x}</mrow>
            <mrow>-5x-4\amp\gt1</mrow>
            <mrow>-5x-4\addright{4}\amp\gt1\addright{4}</mrow>
            <mrow>-5x\amp\gt5</mrow>
            <mrow>\divideunder{-5x}{-5}\amp\mathbin{\highlight{\lt}}\divideunder{5}{-5}</mrow>
            <mrow>x\amp\lt-1</mrow>
          </md>
        </p>
        <p permid="Pzc">
          Note that when we divided both sides of the inequality by <m>-5</m>,
          we had to switch the direction of the inequality symbol.
        </p>
        <p permid="vGl">
          The solution set in set-builder notation is <m>\{x\mid x\lt-1\}</m>.
        </p>
        <p permid="bNu">
          The solution set in interval notation is <m>(-\infty,-1)</m>.
        </p>
      </solution>
    </example>
    <example permid="Tzb">
      <statement>
        <p permid="sLF">
          When a stopwatch started,
          the pressure inside a gas container was <m>4.2</m> atm
          (standard atmospheric pressure).
          As the container was heated,
          the pressure increased by <m>0.7</m> atm per minute.
          The maximum pressure the container can handle was <m>21.7</m> atm.
          Heating must be stopped once the pressure reaches <m>21.7</m> atm.
          In what time interval was the container safe?
        </p>
      </statement>
      <solution permid="QEv">
        <p permid="HUD">
          The pressure increases by <m>0.7</m> atm per minute,
          so it increases by <m>0.7m</m> after <m>m</m> minutes.
          Counting in the original pressure of <m>4.2</m> atm,
          pressure in the container can be modeled by <m>0.7m+4.2</m>,
          where <m>m</m> is the number of minutes since the stop watch started.
        </p>
        <p permid="obM">
          The container is safe when the pressure is <m>21.7</m> atm or lower.
          We can write and solve this inequality:
          <md permid="aIb">
            <mrow>0.7m+4.2\amp\leq21.7</mrow>
            <mrow>0.7m+4.2\subtractright{4.2}\amp\leq21.7\subtractright{4.2}</mrow>
            <mrow>0.7m\amp\leq17.5</mrow>
            <mrow>\divideunder{0.7m}{0.7}\amp\leq\divideunder{17.5}{0.7}</mrow>
            <mrow>m\amp\leq25</mrow>
          </md>
        </p>
        <p permid="UiV">
          In summary, the container was safe as long as <m>m\leq25</m>.
          Assuming that <m>m</m> also must be greater than or equal to zero,
          this means <m>0\leq m\leq 25</m>.
          We can write this as the time interval as <m>[0,25]</m>.
          Thus, the container was safe between 0 minutes and 25 minutes.
        </p>
      </solution>
    </example>
  </subsection>
  
  <exercises permid="vrQ">
    <exercisegroup cols="2" permid="byZ">
      <title>Review and Warmup</title>
      <introduction permid="Yjh">
        <p permid="Dzs">
          For each problem below, solve the inequality, and
          in addition to writing both set-builder and interval notations for each solution set,
          draw a graph of each solution set on a number line.
        </p>
      </introduction>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(1,5,1);
            $b=random(6,10,1);
            $left = Compute("x+$a");
            $comp = '>';
            $right = Compute("$b");

            $c = $b-$a;
            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            $setans = Compute("{ x | x > $c}");
            $alt = Compute("{ x | $c &lt; x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($c,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(1,5,1);
            $b=random(6,10,1);
            $left = Compute("x+$a");
            $comp = '>';
            $right = Compute("$b");

            $c = $b-$a;
            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            $setans = Compute("{ x | x > $c}");
            $alt = Compute("{ x | $c &lt; x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($c,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(1,5,1);
            $b=random(6,10,1);
            $left = Compute("$a");
            $comp = ">";
            $right = Compute("x-$b");

            $c = $a+$b;
            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");

            $setans = Compute("{ x | x &lt; $c}");
            $alt = Compute("{ x | $c > x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$c)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(1,5,1);
            $b=random(6,10,1);
            $left = Compute("$a");
            $comp = ">";
            $right = Compute("x-$b");

            $c = $a+$b;
            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");

            $setans = Compute("{ x | x &lt; $c}");
            $alt = Compute("{ x | $c > x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$c)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
       <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,5,1);
            $c=list_random((2,3,4));
            $b=$a*$c;
            $left = Compute("$a*x");
            $comp = "\leq";
            $right = Compute("$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");

            $setans = Compute("{ x | x &lt;= $c}");
            $alt = Compute("{ x | $c >= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$c]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
       <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,5,1);
            $c=list_random((2,3,4));
            $b=$a*$c;
            $left = Compute("$a*x");
            $comp = "\leq";
            $right = Compute("$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");

            $setans = Compute("{ x | x &lt;= $c}");
            $alt = Compute("{ x | $c >= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$c]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
       <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,5,1);
            $c=list_random((2,3,4));
            $b=$a*$c;
            $left = Compute("$b");
            $comp = "\geq";
            $right = Compute("-$a*x");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x >= -$c}");
            $alt = Compute("{ x | -$c &lt;= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[-$c,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
       <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,5,1);
            $c=list_random((2,3,4));
            $b=$a*$c;
            $left = Compute("$b");
            $comp = "\geq";
            $right = Compute("-$a*x");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x >= -$c}");
            $alt = Compute("{ x | -$c &lt;= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[-$c,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Fraction");

            $num=random(1,10,1);
            $den=random(2,10,1);
            while (gcd($num,$den)!=1) {$den=random(2,10,1);}
            $frac = Fraction($num,$den);

            $a=$num*list_random((1,2,3,4));
            $left = Compute("$frac*x");
            $comp = ">";
            $right = Compute("$a");
            $b=$a/$num*$den;

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $b}");
            $alt = Compute("{ x | $b &lt; x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($b,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Fraction");

            $num=random(1,10,1);
            $den=random(2,10,1);
            while (gcd($num,$den)!=1) {$den=random(2,10,1);}
            $frac = Fraction($num,$den);

            $a=$num*list_random((1,2,3,4));
            $left = Compute("$frac*x");
            $comp = ">";
            $right = Compute("$a");
            $b=$a/$num*$den;

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $b}");
            $alt = Compute("{ x | $b &lt; x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($b,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      
      <exercise permid="Jvv">
        <webwork source="Contrib/PCC/BasicAlgebra/LinearEquationApplications/ModelingWithEquation130.pg" />
      </exercise>
      <exercise permid="pCE">
        <webwork source="Contrib/PCC/BasicAlgebra/LinearEquationApplications/ModelingWithEquation140.pg" />
      </exercise>
    </exercisegroup>
    <exercisegroup cols="2" permid="HGi">
      <title>Solving Multistep Linear Inequalities</title>
      <introduction permid="VJN">
        <p permid="JJQ">
          For each problem below, solve the inequality and,
          in addition to writing both set-builder and interval notations for each solution set,
          draw a graph of each solution set on a number line. 
        </p>
      </introduction>

      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $b=random(2,10,1);
            $v=random(2,10,1);
            $c=$a*$v+$b;
            $left = Compute("$a*x+$b");
            $comp = ">";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $v}");
            $alt = Compute("{ x | $v &lt; x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($v,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $b=random(2,10,1);
            $v=random(2,10,1);
            $c=$a*$v+$b;
            $left = Compute("$a*x+$b");
            $comp = ">";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $v}");
            $alt = Compute("{ x | $v &lt; x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($v,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>

      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(3,10,1);
            $b=random(2,5,1);
            $v=random(2,10,1);
            $c=$a*$v-$b;

            $left = Compute("$c");
            $comp = "\geq";
            $right = Compute("$a*x-$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt;= $v}");
            $alt = Compute("{ x | $v >= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$v]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(3,10,1);
            $b=random(2,5,1);
            $v=random(2,10,1);
            $c=$a*$v-$b;

            $left = Compute("$c");
            $comp = "\geq";
            $right = Compute("$a*x-$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt;= $v}");
            $alt = Compute("{ x | $v >= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$v]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $b=random(1,10,1);
            $v=random(2,10,1);
            $c=$b+$a*$v;

            $left = Compute("$c");
            $comp = "\leq";
            $right = Compute("$b-$a*x");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt;= -$v}");
            $alt = Compute("{ x | -$v >= x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,-$v]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $b=random(1,10,1);
            $v=random(2,10,1);
            $c=$b+$a*$v;

            $left = Compute("$c");
            $comp = "\leq";
            $right = Compute("$b-$a*x");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt;= -$v}");
            $alt = Compute("{ x | -$v >= x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,-$v]");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
       <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $b=random(1,10,1);
            $v=random(2,10,1);
            $c=$b+$a*$v;

            $left = Compute("-$a*x-$b");
            $comp = "&lt;";
            $right = Compute("-$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $v}");
            $alt = Compute("{ x | $v &lt; x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($v,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $b=random(1,10,1);
            $v=random(2,10,1);
            $c=$b+$a*$v;

            $left = Compute("-$a*x-$b");
            $comp = "&lt;";
            $right = Compute("-$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $v}");
            $alt = Compute("{ x | $v &lt; x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($v,inf)");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(3,10,1);
            $b=random(2,5,1);

            $left = Compute("$b");
            $comp = "\geq";
            $right = Compute("-$a*x+$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x >= 0}");
            $alt = Compute("{ x | 0 &lt;= x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[0,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(3,10,1);
            $b=random(2,5,1);

            $left = Compute("$b");
            $comp = "\geq";
            $right = Compute("-$a*x+$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x >= 0}");
            $alt = Compute("{ x | 0 &lt;= x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[0,inf)");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $b=random(1,5,1);
            $v=random(6,10,1);
            $c=$b-$v;

            $left = Compute("$c");
            $comp = ">";
            $right = Compute("$b-x");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $v}");
            $alt = Compute("{ x | $v &lt; x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($v,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $b=random(1,5,1);
            $v=random(6,10,1);
            $c=$b-$v;

            $left = Compute("$c");
            $comp = ">";
            $right = Compute("$b-x");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x > $v}");
            $alt = Compute("{ x | $v &lt; x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($v,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $v = random(2,10,1);
            $b=random(1,10,1);
            $c= $a*($v+$b);

            $left = Compute("$a*(x+$b)");
            $comp = "\geq";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x >= $v}");
            $alt = Compute("{ x | $v &lt;= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[$v,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(2,10,1);
            $v = random(2,10,1);
            $b=random(1,10,1);
            $c= $a*($v+$b);

            $left = Compute("$a*(x+$b)");
            $comp = "\geq";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x >= $v}");
            $alt = Compute("{ x | $v &lt;= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[$v,inf)");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(t=>"Real");

            $a=random(6,10,1);
            $b=random(2,10,1);
            $c=random(1,5,1);
            $crit=random(2,10,1);
            $d=$a*$crit+$b-$c*$crit;

            $left = Compute("$a*t+$b");
            $comp = "&lt;";
            $right = Compute("$c*t+$d");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(t=>"Real");

            $setans = Compute("{ t | t &lt; $crit}");
            $alt = Compute("{ t | $crit>= t}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->variables->are(t=>"Real");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(t=>"Real");

            $a=random(6,10,1);
            $b=random(2,10,1);
            $c=random(1,5,1);
            $crit=random(2,10,1);
            $d=$a*$crit+$b-$c*$crit;

            $left = Compute("$a*t+$b");
            $comp = "&lt;";
            $right = Compute("$c*t+$d");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(t=>"Real");

            $setans = Compute("{ t | t &lt; $crit}");
            $alt = Compute("{ t | $crit>= t}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->variables->are(t=>"Real");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit)");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(z=>"Real");

            <!-- #make sure $d is negative -->
            do {
              $a=random(2,10,1);
              $b=random(2,10,1);
              $crit=random(1,10,1);
              $ans=random(1,10,1);
              $d=$b-($a-1)*$crit;
            } until ($d &lt; 0);

            $d=abs($d);

            $left = Compute("-$a*z+$b");
            $comp = "\leq";
            $right = Compute("-z-$d");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(z=>"Real");

            $setans = Compute("{ z | z >= $crit}");
            $alt = Compute("{ z | $crit &lt;= z}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[$crit,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(z=>"Real");

            <!-- #make sure $d is negative -->
            do {
              $a=random(2,10,1);
              $b=random(2,10,1);
              $crit=random(1,10,1);
              $ans=random(1,10,1);
              $d=$b-($a-1)*$crit;
            } until ($d &lt; 0);

            $d=abs($d);

            $left = Compute("-$a*z+$b");
            $comp = "\leq";
            $right = Compute("-z-$d");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(z=>"Real");

            $setans = Compute("{ z | z >= $crit}");
            $alt = Compute("{ z | $crit &lt;= z}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("[$crit,inf)");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(a=>"Real");

            do{
            $a=random(2,10,1);
            $b=random(2,10,1);
            $c=random(2,10,1);
            $d=random(2,10,1);} until (1 - $b + $d >1);
            $crit=random(-10,10,1);

            <!-- #make sure $e is positive -->
            $e=$crit-$a-$b*$crit+$c+$d*$crit;
            while ($e&lt;=0) {
              $crit=random(-10,10,1);
              $e=$crit-$a-$b*$crit+$c+$d*$crit;
            }

            $left = Compute("a-$a-$b*a");
            $comp = ">";
            $right = Compute("-$c-$d*a+$e");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(a=>"Real");

            $setans = Compute("{ a | a > $crit}");
            $alt = Compute("{ a | $crit &lt; a}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($crit,inf)");

          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(a=>"Real");

            do{
            $a=random(2,10,1);
            $b=random(2,10,1);
            $c=random(2,10,1);
            $d=random(2,10,1);} until (1 - $b + $d >1);
            $crit=random(-10,10,1);

            <!-- #make sure $e is positive -->
            $e=$crit-$a-$b*$crit+$c+$d*$crit;
            while ($e&lt;=0) {
              $crit=random(-10,10,1);
              $e=$crit-$a-$b*$crit+$c+$d*$crit;
            }

            $left = Compute("a-$a-$b*a");
            $comp = ">";
            $right = Compute("-$c-$d*a+$e");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(a=>"Real");

            $setans = Compute("{ a | a > $crit}");
            $alt = Compute("{ a | $crit &lt; a}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($crit,inf)");

          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(p=>"Real");

            $a=random(2,10,1);
            $b=random(2,10,1);
            $c=random(2,10,1);
            $d=$b;
            $e=random(2,10,1);
            <!-- #make sure x terms are not cancelled -->
            while (($a+$c)==(-$e)) {$e=random(2,10,1);}

            $left = Compute("-$c*p+$d-$e*p");
            $comp = "\geq";
            $right = Compute("$a*p+$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(p=>"Real");

            $setans = Compute("{ p | p &lt;= 0}");
            $alt = Compute("{ p | 0 >= p}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,0]");

          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise> 
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(p=>"Real");

            $a=random(2,10,1);
            $b=random(2,10,1);
            $c=random(2,10,1);
            $d=$b;
            $e=random(2,10,1);
            <!-- #make sure x terms are not cancelled -->
            while (($a+$c)==(-$e)) {$e=random(2,10,1);}

            $left = Compute("-$c*p+$d-$e*p");
            $comp = "\geq";
            $right = Compute("$a*p+$b");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(p=>"Real");

            $setans = Compute("{ p | p &lt;= 0}");
            $alt = Compute("{ p | 0 >= p}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,0]");

          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>    
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->add(p=>"Real");

            $a=random(2,10,1);
            $b=random(1,10,1);
            $crit = non_zero_random(-10,10,1);
            $c= -$a*($crit -$b);

            $left = Compute("$c");
            $comp = "&lt;";
            $right = Compute("-$a*(p-$b)");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->add(p=>"Real");

            $setans = Compute("{ p | p &lt; $crit}");
            $alt = Compute("{ p | $crit > p}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit )");

          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->add(p=>"Real");

            $a=random(2,10,1);
            $b=random(1,10,1);
            $crit = non_zero_random(-10,10,1);
            $c= -$a*($crit -$b);

            $left = Compute("$c");
            $comp = "&lt;";
            $right = Compute("-$a*(p-$b)");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->add(p=>"Real");

            $setans = Compute("{ p | p &lt; $crit}");
            $alt = Compute("{ p | $crit > p}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit )");

          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            do {
              $crit = random(-10,-2,1);
              $b=random(1,10,1);
              $c= -($crit -$b);
            } until ($c>0);

            $left = Compute("-(x-$b)");
            $comp = "\geq";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt;= $crit }");
            $alt = Compute("{ x | $crit  >= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            do {
              $crit = random(-10,-2,1);
              $b=random(1,10,1);
              $c= -($crit -$b);
            } until ($c>0);

            $left = Compute("-(x-$b)");
            $comp = "\geq";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt;= $crit }");
            $alt = Compute("{ x | $crit  >= x}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit]");
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(z=>"Real");

            $a=random(1,10,1);
            $b=random(2,10,1);
            $crit = non_zero_random(-10,10,1);
            $c=random(1,10,1);
            $d= $a-$b*($crit -$c);

            $left = Compute("$d");
            $comp = "\leq";
            $right = Compute("$a-$b*(z-$c)");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(z=>"Real");

            $setans = Compute("{ z | z &lt;= $crit}");
            $alt = Compute("{ z | $crit >= z}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit ]");           
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(z=>"Real");

            $a=random(1,10,1);
            $b=random(2,10,1);
            $crit = non_zero_random(-10,10,1);
            $c=random(1,10,1);
            $d= $a-$b*($crit -$c);

            $left = Compute("$d");
            $comp = "\leq";
            $right = Compute("$a-$b*(z-$c)");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(z=>"Real");

            $setans = Compute("{ z | z &lt;= $crit}");
            $alt = Compute("{ z | $crit >= z}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit ]");           
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(y=>"Real");

            $a=random(1,5,1);
            $b=random(6,10,1);
            $crit = random(-10,10,1);
            $c= $a-($crit+$b);

            $left = Compute("$a-(y+$b)");
            $comp = "&lt;";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(y=>"Real");

            $setans = Compute("{ y | y > $crit}");
            $alt = Compute("{ y | $crit &lt; y}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($crit,inf)");           
          </pg-code>
          <statement>
            <p> 

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");
            Context()->variables->are(y=>"Real");

            $a=random(1,5,1);
            $b=random(6,10,1);
            $crit = random(-10,10,1);
            $c= $a-($crit+$b);

            $left = Compute("$a-(y+$b)");
            $comp = "&lt;";
            $right = Compute("$c");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');
            Context()->variables->are(y=>"Real");

            $setans = Compute("{ y | y > $crit}");
            $alt = Compute("{ y | $crit &lt; y}");
            $ans = OneOf($setans, $alt);

            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("($crit,inf)");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(1,5,1);
            $b=random(7,10,1);
            $c=random(3,10,1);
            $crit = random(-10,10,1);

            $e=random(1,10,1);
            $f=random(2,5,1);
            $d= $a+$b*($crit-$c)+$e-$f*$crit;

            $left = Compute("$a+$b*(x-$c)");
            $comp = "&lt;";
            $right = Compute("$d-($e-$f*x)");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt; $crit}");
            $alt = Compute("{ x | $crit > x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit)");           
          </pg-code>
          <statement>
            <p><m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            Context("Numeric");

            $a=random(1,5,1);
            $b=random(7,10,1);
            $c=random(3,10,1);
            $crit = random(-10,10,1);

            $e=random(1,10,1);
            $f=random(2,5,1);
            $d= $a+$b*($crit-$c)+$e-$f*$crit;

            $left = Compute("$a+$b*(x-$c)");
            $comp = "&lt;";
            $right = Compute("$d-($e-$f*x)");

            InequalitySetBuilder::UseVerticalSuchThat();
            Context("InequalitySetBuilder-Only");
            Context()->flags->set(formatStudentAnswer=>'parsed');

            $setans = Compute("{ x | x &lt; $crit}");
            $alt = Compute("{ x | $crit > x}");
            $ans = OneOf($setans, $alt);


            Context("Interval");
            Context()->flags->set("formatStudentAnswer"=>'parsed');
            $intans = Compute("(-inf,$crit)");
          </pg-code>
          <statement>
            <p>

              <m><var name="$left"/> <var name="$comp"/> <var name="$right"/></m></p>
            <p><var name="$setans" width="15"/>; <var name="$intans" width="15"/></p>
          </statement>
        </webwork>
      </exercise>
    
    </exercisegroup>
    <exercisegroup permid="nNr">
      <title>Applications</title>
      <exercise permid="qmy">
        <webwork source="Contrib/PCC/BasicAlgebra/LinearInequalities/InequalityWordProblem10.pg" />
      </exercise>
      <exercise permid="WtH">
        <webwork source="Contrib/PCC/BasicAlgebra/LinearInequalities/InequalityWordProblem10.pg" />
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            $a =  random(11,20,1);
            $b = random(27,33,1);
            $c = random(45,52,1);
            $ans = ($c-$b)/$a*100;

            Context("Interval");
            Context()->flags->set(ignoreEndpointTypes => 1);
            Context()->flags->set(tolType=>absolute);
            Context()->flags->set(tolerance=>0.5);
          </pg-code>

          <statement>
            <p>A car rental company offers the following two plans for renting a car.</p>

            <p>Plan A: <var name="$b"/> per day and <var name="$a"/> cents per mile</p>

            <p>Plan B: <var name="$c"/> per day with free unlimited mileage</p>

            <p>How many miles must one drive in order to justify choosing Plan B for a one-day rental? <var name="$ans" width="10"/>
            </p>
          </statement>
        </webwork>
      </exercise>
      <exercise>
        <webwork>
          <pg-code>
            $a =  random(11,20,1);
            $b = random(27,33,1);
            $c = random(45,52,1);
            $ans = ($c-$b)/$a*100;

            Context("Interval");
            Context()->flags->set(ignoreEndpointTypes => 1);
            Context()->flags->set(tolType=>absolute);
            Context()->flags->set(tolerance=>0.5);
          </pg-code>

          <statement>
            <p>A car rental company offers the following two plans for renting a car.</p>

            <p>Plan A: <var name="$b"/> per day and <var name="$a"/> cents per mile</p>

            <p>Plan B: <var name="$c"/> per day with free unlimited mileage</p>

            <p>How many miles must one drive in order to justify choosing Plan B for a one-day rental? <var name="$ans" width="10"/>
            </p>
          </statement>
        </webwork>
      </exercise>

      <!-- <exercise permid="CAQ">
        <webwork source="Contrib/PCC/Math95/LinearInequalities/LinearInequalities8.pg" />
      </exercise>
      <exercise permid="iHZ">
        <webwork source="Contrib/PCC/Math95/LinearInequalities/LinearInequalities8.pg" /> 
      </exercise> -->
      <exercise permid="OPi">
        <webwork source="Contrib/PCC/Math95/LinearInequalities/LinearInequalities9.pg" />
      </exercise>
      <exercise permid="uWr">
        <webwork source="Contrib/PCC/Math95/LinearInequalities/LinearInequalities9.pg" />
      </exercise>
    </exercisegroup>
  </exercises>
</section>